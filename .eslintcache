[{"/home/spiderqshka/Documents/GitHub/topist/src/components/Album/index.tsx":"1","/home/spiderqshka/Documents/GitHub/topist/src/pages/Main/index.tsx":"2","/home/spiderqshka/Documents/GitHub/topist/src/components/Video/index.tsx":"3","/home/spiderqshka/Documents/GitHub/topist/src/components/Polaroid/index.tsx":"4","/home/spiderqshka/Documents/GitHub/topist/src/index.tsx":"5","/home/spiderqshka/Documents/GitHub/topist/src/App.tsx":"6","/home/spiderqshka/Documents/GitHub/topist/src/components/Album/Page/index.tsx":"7","/home/spiderqshka/Documents/GitHub/topist/src/helpers/awsApi.ts":"8","/home/spiderqshka/Documents/GitHub/topist/src/helpers/index.ts":"9","/home/spiderqshka/Documents/GitHub/topist/src/config.ts":"10","/home/spiderqshka/Documents/GitHub/topist/src/components/Album/FlipBook/index.tsx":"11","/home/spiderqshka/Documents/GitHub/topist/src/components/Loader/index.tsx":"12"},{"size":1722,"mtime":1613282057062,"results":"13","hashOfConfig":"14"},{"size":657,"mtime":1613284195487,"results":"15","hashOfConfig":"14"},{"size":1155,"mtime":1613281031445,"results":"16","hashOfConfig":"14"},{"size":829,"mtime":1613278048018,"results":"17","hashOfConfig":"14"},{"size":197,"mtime":1613273286230,"results":"18","hashOfConfig":"14"},{"size":154,"mtime":1610972988986,"results":"19","hashOfConfig":"14"},{"size":3218,"mtime":1613278139913,"results":"20","hashOfConfig":"14"},{"size":3412,"mtime":1613272842455,"results":"21","hashOfConfig":"14"},{"size":976,"mtime":1613272848159,"results":"22","hashOfConfig":"14"},{"size":93,"mtime":1613276741817,"results":"23","hashOfConfig":"14"},{"size":1403,"mtime":1613282355032,"results":"24","hashOfConfig":"14"},{"size":310,"mtime":1613284131242,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c2tjlp",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/spiderqshka/Documents/GitHub/topist/src/components/Album/index.tsx",[],"/home/spiderqshka/Documents/GitHub/topist/src/pages/Main/index.tsx",[],"/home/spiderqshka/Documents/GitHub/topist/src/components/Video/index.tsx",["54"],"/home/spiderqshka/Documents/GitHub/topist/src/components/Polaroid/index.tsx",[],"/home/spiderqshka/Documents/GitHub/topist/src/index.tsx",[],["55","56"],"/home/spiderqshka/Documents/GitHub/topist/src/App.tsx",[],["57","58"],"/home/spiderqshka/Documents/GitHub/topist/src/components/Album/Page/index.tsx",["59","60","61"],"/home/spiderqshka/Documents/GitHub/topist/src/helpers/awsApi.ts",["62","63","64"],"import AWS from \"aws-sdk\";\nimport { ListObjectsRequest } from \"aws-sdk/clients/s3\";\nimport axios from \"axios\";\nimport { IDataObject } from \"interfaces\";\n\nconst getFileExt: (fileName: string) => string = (fileName: string) =>\n  fileName.slice(fileName.lastIndexOf(\".\") + 1);\n\nexport class AWS_API {\n  private s3Instance: AWS.S3;\n  private bucketName: string;\n  constructor() {\n    this.bucketName = process.env.REACT_APP_AWS_BUCKET_NAME || \"bucket\";\n\n    AWS.config.region = process.env.REACT_APP_AWS_REGION || \"eu-central-1\"; // Region\n    AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n      IdentityPoolId: process.env.REACT_APP_AWS_IDENTITY_POOL_ID || \"\",\n    });\n\n    this.s3Instance = new AWS.S3({\n      apiVersion: process.env.REACT_APP_AWS_API_VERSION,\n      params: { Bucket: this.bucketName },\n    });\n  }\n  getBucketDirectories = (): Promise<string[]> =>\n    new Promise((resolve) => {\n      this.s3Instance.listObjects(\n        { Delimiter: \"/\" } as ListObjectsRequest,\n        (err, data) => {\n          if (err) {\n            console.error(err);\n            resolve([]);\n          } else {\n            const albumsNames = data.CommonPrefixes?.map((commonPrefix) => {\n              const prefix = commonPrefix.Prefix as string;\n              const albumName = decodeURIComponent(prefix.replace(\"/\", \"\"));\n              return albumName;\n            }) as string[];\n            resolve(albumsNames.sort((a, b) => (a < b ? -1 : 1)));\n          }\n        }\n      );\n    });\n  getDirectoryConfig = (directoryName: string): Promise<IDataObject | null> =>\n    new Promise((resolve) => {\n      this.s3Instance.listObjects(\n        {\n          Prefix: directoryName + \"/\",\n        } as ListObjectsRequest,\n        (err, data) => {\n          if (err) {\n            resolve(null);\n          } else {\n            const href = this.s3Instance.endpoint.href;\n            const bucketUrl = href + this.bucketName + \"/\";\n\n            const configFileLink = (data.Contents?.map((file) => {\n              if (file.Size || 0 > 0) {\n                const fileKey = file.Key as string;\n                const fileUrl = bucketUrl + fileKey;\n                return fileUrl;\n              }\n              return null;\n            }) as string[])\n              .filter((file) => !!file)\n              .filter((fileLink) => getFileExt(fileLink) === \"json\")[0];\n\n            axios.get(configFileLink).then((response) => {\n              resolve(response.data);\n            });\n          }\n        }\n      );\n    });\n  getDirectoryMediaLinks = (directoryName: string): Promise<string[]> =>\n    new Promise((resolve) => {\n      this.s3Instance.listObjects(\n        {\n          Prefix: directoryName + \"/\",\n        } as ListObjectsRequest,\n        (err, data) => {\n          if (err) {\n            resolve([]);\n          } else {\n            const href = this.s3Instance.endpoint.href;\n            const bucketUrl = href + this.bucketName + \"/\";\n\n            const filesLinks = (data.Contents?.map((file) => {\n              if (file.Size || 0 > 0) {\n                const fileKey = file.Key as string;\n                const fileUrl = bucketUrl + fileKey;\n                return fileUrl;\n              }\n            }) as string[])\n              .filter((file) => !!file)\n              .filter((fileLink) => getFileExt(fileLink) !== \"json\");\n\n            resolve(filesLinks);\n          }\n        }\n      );\n    });\n}\n","/home/spiderqshka/Documents/GitHub/topist/src/helpers/index.ts",[],["65","66"],"/home/spiderqshka/Documents/GitHub/topist/src/config.ts",[],"/home/spiderqshka/Documents/GitHub/topist/src/components/Album/FlipBook/index.tsx",[],"/home/spiderqshka/Documents/GitHub/topist/src/components/Loader/index.tsx",[],{"ruleId":"67","severity":1,"message":"68","line":1,"column":10,"nodeType":"69","messageId":"70","endLine":1,"endColumn":16},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"71","replacedBy":"75"},{"ruleId":"73","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":19,"column":60,"nodeType":"79","messageId":"80","endLine":19,"endColumn":62},{"ruleId":"77","severity":1,"message":"78","line":75,"column":65,"nodeType":"79","messageId":"80","endLine":75,"endColumn":67},{"ruleId":"77","severity":1,"message":"78","line":96,"column":63,"nodeType":"79","messageId":"80","endLine":96,"endColumn":65},{"ruleId":"81","severity":1,"message":"82","line":58,"column":32,"nodeType":"83","messageId":"84","endLine":58,"endColumn":37},{"ruleId":"85","severity":1,"message":"86","line":88,"column":59,"nodeType":"87","messageId":"88","endLine":88,"endColumn":61},{"ruleId":"81","severity":1,"message":"82","line":89,"column":32,"nodeType":"83","messageId":"84","endLine":89,"endColumn":37},{"ruleId":"71","replacedBy":"89"},{"ruleId":"73","replacedBy":"90"},"@typescript-eslint/no-unused-vars","'config' is defined but never used.","Identifier","unusedVar","no-native-reassign",["91"],"no-negated-in-lhs",["92"],["91"],["92"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["91"],["92"],"no-global-assign","no-unsafe-negation"]