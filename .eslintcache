[{"/home/spiderqshka/Documents/GitHub/topist/src/components/Album/index.tsx":"1","/home/spiderqshka/Documents/GitHub/topist/src/pages/Main/index.tsx":"2","/home/spiderqshka/Documents/GitHub/topist/src/components/Video/index.tsx":"3","/home/spiderqshka/Documents/GitHub/topist/src/components/Polaroid/index.tsx":"4","/home/spiderqshka/Documents/GitHub/topist/src/index.tsx":"5","/home/spiderqshka/Documents/GitHub/topist/src/App.tsx":"6","/home/spiderqshka/Documents/GitHub/topist/src/components/Album/Page/index.tsx":"7","/home/spiderqshka/Documents/GitHub/topist/src/helpers/awsApi.ts":"8","/home/spiderqshka/Documents/GitHub/topist/src/helpers/index.ts":"9","/home/spiderqshka/Documents/GitHub/topist/src/config.ts":"10","/home/spiderqshka/Documents/GitHub/topist/src/components/Album/FlipBook/index.tsx":"11","/home/spiderqshka/Documents/GitHub/topist/src/components/Loader/index.tsx":"12"},{"size":1722,"mtime":1613282057062,"results":"13","hashOfConfig":"14"},{"size":657,"mtime":1613284195487,"results":"15","hashOfConfig":"14"},{"size":1155,"mtime":1613281031445,"results":"16","hashOfConfig":"14"},{"size":829,"mtime":1613278048018,"results":"17","hashOfConfig":"14"},{"size":197,"mtime":1613273286230,"results":"18","hashOfConfig":"14"},{"size":154,"mtime":1610972988986,"results":"19","hashOfConfig":"14"},{"size":3218,"mtime":1613278139913,"results":"20","hashOfConfig":"14"},{"size":3412,"mtime":1613272842455,"results":"21","hashOfConfig":"14"},{"size":976,"mtime":1613272848159,"results":"22","hashOfConfig":"14"},{"size":93,"mtime":1613276741817,"results":"23","hashOfConfig":"14"},{"size":1403,"mtime":1613282355032,"results":"24","hashOfConfig":"14"},{"size":310,"mtime":1613284131242,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c2tjlp",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/spiderqshka/Documents/GitHub/topist/src/components/Album/index.tsx",[],"/home/spiderqshka/Documents/GitHub/topist/src/pages/Main/index.tsx",[],["57","58"],"/home/spiderqshka/Documents/GitHub/topist/src/components/Video/index.tsx",["59"],"import { config } from \"config\";\nimport React, { useRef } from \"react\";\nimport styles from \"./styles.module.scss\";\n\ninterface VideoProps {\n  src: string;\n  caption?: string;\n  isVertical?: boolean;\n  height?: number;\n  width?: number;\n}\n\nexport const Video: React.FunctionComponent<VideoProps> = ({\n  src,\n  height,\n  width,\n  caption,\n}) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const videoHandler = (isHovered: boolean) => {\n    if (videoRef.current) {\n      const video: HTMLVideoElement = videoRef.current;\n      if (isHovered) {\n        video.play();\n      } else {\n        video.pause();\n      }\n    }\n  };\n\n  const videoPadding = 100;\n\n  return (\n    <div className={styles.container}>\n      {caption && <p className={styles.caption}>{caption}</p>}\n      <video\n        src={src}\n        loop\n        className={styles.video}\n        ref={videoRef}\n        style={{\n          maxHeight: height ? height - videoPadding : \"auto\",\n          maxWidth: width ? width - videoPadding : \"auto\",\n        }}\n        onMouseEnter={() => videoHandler(true)}\n        onMouseLeave={() => videoHandler(false)}\n      ></video>\n    </div>\n  );\n};\n","/home/spiderqshka/Documents/GitHub/topist/src/components/Polaroid/index.tsx",[],"/home/spiderqshka/Documents/GitHub/topist/src/index.tsx",[],["60","61"],"/home/spiderqshka/Documents/GitHub/topist/src/App.tsx",[],["62","63"],"/home/spiderqshka/Documents/GitHub/topist/src/components/Album/Page/index.tsx",["64","65","66"],"import { Polaroid } from \"components/Polaroid\";\nimport { Video } from \"components/Video\";\nimport React from \"react\";\nimport { IMedia, IPhoto, IVideo } from \"interfaces\";\nimport styles from \"./styles.module.scss\";\n\ninterface PageProps {\n  media: IMedia;\n  number: number;\n  height: number;\n}\n\ninterface PageSectionPreviewProps {\n  date: string;\n  motto: string;\n  description?: string;\n}\n\nexport const EmptyPage = React.forwardRef<HTMLDivElement>(({}, ref) => {\n  return <div className={styles.page} ref={ref} data-density=\"hard\"></div>;\n});\n\nexport const Page = React.forwardRef<HTMLDivElement, PageProps>(\n  ({ number, media, height }, ref) => {\n    const mediaPadding = 40;\n    const mediaHeight = height - mediaPadding;\n    return (\n      <div className={styles.page} ref={ref} data-density=\"hard\">\n        <div className={`${styles.content}`}>\n          {media.isPhoto ? (\n            <Polaroid\n              caption={(media as IPhoto).caption}\n              photo={media.src}\n              index={number}\n              height={mediaHeight}\n            />\n          ) : (\n            <Video\n              src={media.src}\n              isVertical={(media as IVideo).isVertical}\n              caption={(media as IVideo).caption}\n              height={mediaHeight}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\nexport const PageSectionPreview = React.forwardRef<\n  HTMLDivElement,\n  PageSectionPreviewProps\n>(({ date, motto, description }, ref) => {\n  return (\n    <>\n      <div className={`${styles.page} ${styles.sectionPreview}`} ref={ref}>\n        <div className={styles.content}>\n          <h1 className={styles.date}>{date}</h1>\n          <h2 className={styles.motto}>{motto}</h2>\n        </div>\n      </div>\n      <div\n        className={`${styles.page} ${styles.sectionPreview} ${styles.secondPage}`}\n        ref={ref}\n      >\n        <div className={styles.content}>\n          {description && <p className={styles.previewText}>{description}</p>}\n        </div>\n      </div>\n    </>\n  );\n});\n\nexport const PageStartCover = React.forwardRef<HTMLDivElement>(({}, ref) => {\n  return (\n    <>\n      <div className={`${styles.page} ${styles.cover}`} ref={ref}>\n        <div className={styles.content}>\n          <h2 className={styles.header}>‚ù§</h2>\n        </div>\n      </div>\n\n      <div className={`${styles.page} ${styles.cover}`} ref={ref}>\n        <div className={styles.content}>\n          <p className={styles.previewText}>\n            This book is going to tell you a little and beautiful story about...\n            Well, you'll know soon. <br /> P.S. Click the page to flip it\n          </p>\n        </div>\n      </div>\n    </>\n  );\n});\n\nexport const PageEndCover = React.forwardRef<HTMLDivElement>(({}, ref) => {\n  return (\n    <>\n      <div className={`${styles.page} ${styles.cover} ${styles.end}`} ref={ref}>\n        <div className={styles.content}>\n          <p className={styles.previewText}>Hope you liked it, sunny ;)</p>\n        </div>\n      </div>\n      <div className={`${styles.page} ${styles.cover} ${styles.end}`} ref={ref}>\n        <div className={styles.content}>\n          <h2 className={styles.header}>the end</h2>\n        </div>\n      </div>\n    </>\n  );\n});\n","/home/spiderqshka/Documents/GitHub/topist/src/helpers/awsApi.ts",["67","68","69"],"import AWS from \"aws-sdk\";\nimport { ListObjectsRequest } from \"aws-sdk/clients/s3\";\nimport axios from \"axios\";\nimport { IDataObject } from \"interfaces\";\n\nconst getFileExt: (fileName: string) => string = (fileName: string) =>\n  fileName.slice(fileName.lastIndexOf(\".\") + 1);\n\nexport class AWS_API {\n  private s3Instance: AWS.S3;\n  private bucketName: string;\n  constructor() {\n    this.bucketName = process.env.REACT_APP_AWS_BUCKET_NAME || \"bucket\";\n\n    AWS.config.region = process.env.REACT_APP_AWS_REGION || \"eu-central-1\"; // Region\n    AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n      IdentityPoolId: process.env.REACT_APP_AWS_IDENTITY_POOL_ID || \"\",\n    });\n\n    this.s3Instance = new AWS.S3({\n      apiVersion: process.env.REACT_APP_AWS_API_VERSION,\n      params: { Bucket: this.bucketName },\n    });\n  }\n  getBucketDirectories = (): Promise<string[]> =>\n    new Promise((resolve) => {\n      this.s3Instance.listObjects(\n        { Delimiter: \"/\" } as ListObjectsRequest,\n        (err, data) => {\n          if (err) {\n            console.error(err);\n            resolve([]);\n          } else {\n            const albumsNames = data.CommonPrefixes?.map((commonPrefix) => {\n              const prefix = commonPrefix.Prefix as string;\n              const albumName = decodeURIComponent(prefix.replace(\"/\", \"\"));\n              return albumName;\n            }) as string[];\n            resolve(albumsNames.sort((a, b) => (a < b ? -1 : 1)));\n          }\n        }\n      );\n    });\n  getDirectoryConfig = (directoryName: string): Promise<IDataObject | null> =>\n    new Promise((resolve) => {\n      this.s3Instance.listObjects(\n        {\n          Prefix: directoryName + \"/\",\n        } as ListObjectsRequest,\n        (err, data) => {\n          if (err) {\n            resolve(null);\n          } else {\n            const href = this.s3Instance.endpoint.href;\n            const bucketUrl = href + this.bucketName + \"/\";\n\n            const configFileLink = (data.Contents?.map((file) => {\n              if (file.Size || 0 > 0) {\n                const fileKey = file.Key as string;\n                const fileUrl = bucketUrl + fileKey;\n                return fileUrl;\n              }\n              return null;\n            }) as string[])\n              .filter((file) => !!file)\n              .filter((fileLink) => getFileExt(fileLink) === \"json\")[0];\n\n            axios.get(configFileLink).then((response) => {\n              resolve(response.data);\n            });\n          }\n        }\n      );\n    });\n  getDirectoryMediaLinks = (directoryName: string): Promise<string[]> =>\n    new Promise((resolve) => {\n      this.s3Instance.listObjects(\n        {\n          Prefix: directoryName + \"/\",\n        } as ListObjectsRequest,\n        (err, data) => {\n          if (err) {\n            resolve([]);\n          } else {\n            const href = this.s3Instance.endpoint.href;\n            const bucketUrl = href + this.bucketName + \"/\";\n\n            const filesLinks = (data.Contents?.map((file) => {\n              if (file.Size || 0 > 0) {\n                const fileKey = file.Key as string;\n                const fileUrl = bucketUrl + fileKey;\n                return fileUrl;\n              }\n            }) as string[])\n              .filter((file) => !!file)\n              .filter((fileLink) => getFileExt(fileLink) !== \"json\");\n\n            resolve(filesLinks);\n          }\n        }\n      );\n    });\n}\n","/home/spiderqshka/Documents/GitHub/topist/src/helpers/index.ts",[],["70","71"],"/home/spiderqshka/Documents/GitHub/topist/src/config.ts",[],"/home/spiderqshka/Documents/GitHub/topist/src/components/Album/FlipBook/index.tsx",[],"/home/spiderqshka/Documents/GitHub/topist/src/components/Loader/index.tsx",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":10,"nodeType":"78","messageId":"79","endLine":1,"endColumn":16},{"ruleId":"72","replacedBy":"80"},{"ruleId":"74","replacedBy":"81"},{"ruleId":"72","replacedBy":"82"},{"ruleId":"74","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":19,"column":60,"nodeType":"86","messageId":"87","endLine":19,"endColumn":62},{"ruleId":"84","severity":1,"message":"85","line":75,"column":65,"nodeType":"86","messageId":"87","endLine":75,"endColumn":67},{"ruleId":"84","severity":1,"message":"85","line":96,"column":63,"nodeType":"86","messageId":"87","endLine":96,"endColumn":65},{"ruleId":"88","severity":1,"message":"89","line":58,"column":32,"nodeType":"90","messageId":"91","endLine":58,"endColumn":37},{"ruleId":"92","severity":1,"message":"93","line":88,"column":59,"nodeType":"94","messageId":"95","endLine":88,"endColumn":61},{"ruleId":"88","severity":1,"message":"89","line":89,"column":32,"nodeType":"90","messageId":"91","endLine":89,"endColumn":37},{"ruleId":"72","replacedBy":"96"},{"ruleId":"74","replacedBy":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"@typescript-eslint/no-unused-vars","'config' is defined but never used.","Identifier","unusedVar",["98"],["99"],["98"],["99"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["98"],["99"],"no-global-assign","no-unsafe-negation"]